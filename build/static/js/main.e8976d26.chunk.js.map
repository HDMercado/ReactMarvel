{"version":3,"sources":["assets/images/logo.png","components/Header.js","components/Footer.js","components/Error.js","components/Slider.js","Global.js","components/Personajes.js","components/PagPersonajes.js","components/Personaje.js","components/Peleador.js","components/Torneo.js","Router.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Header","id","className","exact","to","src","logo","alt","activeClassName","Component","Footer","Error","Slider","this","props","title","Global","url1","url2","Personajes","state","personajes","status","getPersonajes","axios","get","then","res","setState","data","results","length","listpersonajes","map","personaje","key","thumbnail","path","extension","name","description","PagPersonajes","size","Personaje","getPersonaje","match","params","console","log","Object","keys","Fragment","Peleador","peleador","Torneo","cantidadRef","React","createRef","peleador_a","peleador_b","peleadores","victorias","numeroPeleas","e","preventDefault","cantidadPeleas","current","value","a","b","validator","allValid","i","Math","floor","random","splice","showMessages","forceUpdate","ranking","concat","reload","window","location","replace","SimpleReactValidator","messages","required","numeric","min","max","onSubmit","onChange","htmlFor","type","ref","onClick","message","Router","component","App","Boolean","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error"],"mappings":"8FAAAA,EAAOC,QAAU,IAA0B,kC,oOCmC5BC,E,uKA7BP,OACI,4BAAQC,GAAG,UACP,yBAAKC,UAAU,UAEX,yBAAKD,GAAG,QACJ,kBAAC,IAAD,CAASE,OAAK,EAACC,GAAK,WAChB,yBAAKC,IAAKC,IAAMJ,UAAU,WAAWK,IAAI,eAIjD,yBAAKN,GAAG,QACJ,4BAEA,4BACI,kBAAC,IAAD,CAASE,OAAK,EAACC,GAAK,UAAUI,gBAAgB,UAA9C,WAEJ,4BACI,kBAAC,IAAD,CAASL,OAAK,EAACC,GAAK,cAAcI,gBAAgB,UAAlD,iBAKR,yBAAKN,UAAU,mB,GAxBdO,aCSNC,EAXA,WACX,OACI,4BAAQT,GAAG,UACX,yBAAKC,UAAU,UACX,iDCMGS,EAVD,WACV,OACI,6BAASV,GAAG,WACZ,wBAAIC,UAAU,aAAd,2BACA,+ECSOU,E,uKAVP,OACI,yBAAKX,GAAG,SAASC,UAAU,UACvB,4BAAKW,KAAKC,MAAMC,Y,GALXN,aCGNO,EALF,CACTC,KAAM,4CACNC,KAAM,uF,iBCyEKC,G,kNAlEXF,KAAOD,EAAOC,K,EACdC,KAAOF,EAAOE,K,EAEdE,MAAQ,CACJC,WAAY,GACZC,OAAQ,M,EAMZC,cAAgB,WACZC,IAAMC,IAAI,EAAKR,KAAO,aAAe,EAAKC,MACrCQ,MAAK,SAAAC,GACF,EAAKC,SAAS,CAEVP,WAAYM,EAAIE,KAAKA,KAAKC,QAC1BR,OAAQ,gB,mEARpBT,KAAKU,kB,+BAeL,GAAIV,KAAKO,MAAMC,WAAWU,QAAU,EAAG,CACnC,IAAIC,EAAiBnB,KAAKO,MAAMC,WAAWY,KAAI,SAACC,GAC5C,OACI,yBAAKhC,UAAU,OAAOD,GAAG,qBAAqBkC,IAAKD,EAAUjC,IAEzD,yBAAKC,UAAU,gBACX,kBAAC,IAAD,CAAME,GAAI,yBAA2B8B,EAAUjC,IAC3C,yBAAKI,IAAK6B,EAAUE,UAAUC,KAAO,IAAMH,EAAUE,UAAUE,UAAW/B,IAAK2B,EAAUK,SAGjG,wBAAIrC,UAAU,cAAcgC,EAAUK,MACtC,yBAAKrC,UAAU,eAEVgC,EAAUM,aAEf,yBAAKtC,UAAU,iBAK3B,OACI,yBAAKD,GAAG,cACH+B,GAGN,OAAqC,IAAjCnB,KAAKO,MAAMC,WAAWU,QAAsC,YAAtBlB,KAAKO,MAAME,OAEpD,yBAAKrB,GAAG,cACJ,wBAAIC,UAAU,aAAd,mCAKJ,yBAAKA,UAAU,UAAUD,GAAG,cACxB,wBAAIC,UAAU,aAAd,oB,GA3DKO,cCqBVgC,E,uKAnBP,OACI,yBAAKxC,GAAG,iBACJ,kBAAC,EAAD,CACIc,MAAM,aACN2B,KAAK,WAET,yBAAKxC,UAAU,UACX,yBAAKD,GAAG,aACJ,yBAAKC,UAAU,MAAMD,GAAG,UACpB,kBAAC,EAAD,c,GAbAQ,aC6DbkC,E,4MA7DX1B,KAAOD,EAAOC,K,EACdC,KAAOF,EAAOE,K,EAEdE,MAAQ,CACJc,UAAW,GACXZ,OAAQ,M,EAOZsB,aAAe,WACX,IAAI3C,EAAK,EAAKa,MAAM+B,MAAMC,OAAO7C,GACjCuB,IAAMC,IAAI,EAAKR,KAAO,cAAgBhB,EAAK,EAAKiB,MAC3CQ,MAAK,SAAAC,GACF,EAAKC,SAAS,CAEVM,UAAWP,EAAIE,KAAKA,KAAKC,QAAQ,GACjCR,OAAQ,gB,mEAVpBT,KAAK+B,iB,+BAgBL,IAAIV,EAAYrB,KAAKO,MAAMc,UAE3B,OADAa,QAAQC,IAAId,GAE0B,IAAlCe,OAAOC,KAAKhB,GAAWH,OACnB,yBAAK9B,GAAG,WACJ,wBAAIC,UAAU,aAAd,gBAEF,kBAAC,IAAMiD,SAAP,KACE,kBAAC,EAAD,CACIpC,MAAOmB,EAAUK,KACjBG,KAAK,WAET,yBAAKxC,UAAU,UACX,6BAASD,GAAG,WAEPY,KAAKO,MAAMc,WACR,6BAAShC,UAAU,8BAA8BD,GAAG,oBAChD,yBAAKC,UAAU,cACX,yBAAKG,IAAK6B,EAAUE,UAAUC,KAAO,IAAMH,EAAUE,UAAUE,UAAW/B,IAAK2B,EAAUK,QAE7F,wBAAIrC,UAAU,aAAagC,EAAUK,MACrC,2BACKL,EAAUM,aAEf,yBAAKtC,UAAU,eAK3B,yBAAKA,UAAU,mB,GAvDfO,aCcT2C,E,uKAdD,IAAD,EACuBvC,KAAKC,MAAMuC,SAA/Bd,EADH,EACGA,KAAMH,EADT,EACSA,UACd,OACI,kBAAC,IAAMe,SAAP,KACI,4BAAKZ,GACL,4BACI,yBAAKrC,UAAU,iBAAiBG,IAAK+B,EAAUC,KAAO,IAAMD,EAAUE,UAAW/B,IAAKgC,U,GARnF9B,a,iBCyNR6C,E,4MApNXrC,KAAOD,EAAOC,K,EACdC,KAAOF,EAAOE,K,EAEdqC,YAAcC,IAAMC,Y,EAEpBrC,MAAQ,CACJC,WAAY,GACZqC,WAAY,GACZC,WAAY,GACZC,WAAY,GACZC,UAAW,GACXvC,OAAQ,M,EAiBZC,cAAgB,WACZC,IAAMC,IAAI,EAAKR,KAAO,aAAe,EAAKC,MACrCQ,MAAK,SAAAC,GACF,EAAKC,SAAS,CACVP,WAAYM,EAAIE,KAAKA,KAAKC,QAC1BR,OAAQ,gB,EAKxBwC,aAAe,SAACC,GACZA,EAAEC,iBACF,IAAIC,EAAiB,EAAKV,YAAYW,QAAQC,MAC1C9C,EAAa,EAAKD,MAAMC,WACxBqC,EAAa,GACbC,EAAa,GACbS,EAAI,EACJC,EAAI,EACR,GAAI,EAAKC,UAAUC,WACf,IAAK,IAAIC,EAAI,EAAGA,EAAIP,EAAgBO,IAChCJ,EAAIK,KAAKC,MAAMD,KAAKE,SAAWtD,EAAWU,QAC1CsC,EAAII,KAAKC,MAAMD,KAAKE,SAAWtD,EAAWU,QAC1C2B,EAAWc,GAAKnD,EAAW+C,GAC3BT,EAAWa,GAAKnD,EAAWgD,GAC3BhD,EAAWuD,OAAOR,EAAG,GACrB/C,EAAWuD,OAAOP,EAAG,QAIzB,EAAKzC,SAAS,CACVN,OAAQ,WAEZ,EAAKgD,UAAUO,eACf,EAAKC,cAKT,EAAKlD,SAAS,CACVqC,eAAgBA,EAChBP,WAAYA,EACZC,WAAYA,K,EAIpBoB,QAAU,WAON,IANA,IAAIrB,EAAa,EAAKtC,MAAMsC,WACxBC,EAAa,EAAKvC,MAAMuC,WACxBE,EAAY,GACZD,EAAaF,EAAWsB,OAAOrB,GAG1Ba,EAAI,EAAGA,EAAIZ,EAAW7B,OAAQyC,IACnCX,EAAUW,GAAKZ,EAAW7B,OAAS,EAAIyC,EACnCX,EAAUW,GAAK,IACfX,EAAUW,GAAK,GAGvB,EAAK5C,SAAS,CACVgC,WAAYA,EACZC,UAAWA,K,EAKnBoB,OAAS,WACLC,OAAOC,SAASC,QAAQ,K,mEA9ExBvE,KAAKyD,UAAY,IAAIe,IAAqB,CACtCC,SAAU,CACNC,SAAU,2BACVC,QAAS,oDACTC,IAAK,kDACLC,IAAK,qDAIb7E,KAAKU,kB,+BA0EC,IAAD,OACL,OACI,kBAAC,IAAM4B,SAAP,KACI,kBAAC,EAAD,CACIpC,MAAM,WAEV,yBAAKb,UAAU,UACX,yBAAKD,GAAG,WAAWC,UAAU,gBAEzB,0BAAMA,UAAU,WAAWyF,SAAU9E,KAAKiD,aAAc8B,SAAU/E,KAAKiD,cACnE,4BACA,2BAAO+B,QAAQ,UAAf,iDACA,2BAAOC,KAAK,OAAOvD,KAAK,SAASwD,IAAKlF,KAAK0C,cAC3C,2BAAOuC,KAAK,SAAS3B,MAAM,QAAQjE,UAAU,iBAAiB8F,QAASnF,KAAKiD,eAC3EjD,KAAKyD,UAAU2B,QAAQ,SAAUpF,KAAKO,MAAM6C,eAAgB,0CAGhEpD,KAAKO,MAAMsC,WAAW3B,OAAS,GAC5B,yBAAK7B,UAAU,UACX,yBAAKA,UAAU,YACX,yBAAKA,UAAU,YACX,2BAAOA,UAAU,uBACb,+BACI,4BACI,wCACA,+BAGR,+BAEQW,KAAKO,MAAMsC,WAAWzB,KAAI,SAACyB,EAAYc,GACnC,OACI,wBAAIrC,IAAK,YAAcqC,GACnB,kBAAC,EAAD,CAAUrC,IAAK,YAAcqC,EAAGnB,SAAUK,WAQtE,yBAAKxD,UAAU,YACX,2BAAOA,UAAU,uBACb,+BACI,4BACI,wCACA,+BAGR,+BACKW,KAAKO,MAAMuC,WAAW1B,KAAI,SAAC0B,EAAYa,GACpC,OACI,wBAAIrC,IAAK,YAAcqC,GACnB,kBAAC,EAAD,CAAUrC,IAAK,YAAcqC,EAAGnB,SAAUM,WASlE,yBAAKzD,UAAU,cAGnB,yBAAKA,UAAU,cACX,4BAAQ4F,KAAK,SAAS3B,MAAM,WAAWjE,UAAU,iBAAiB8F,QAASnF,KAAKkE,SAAhF,cAKXlE,KAAKO,MAAMwC,WAAW7B,OAAS,GAC5B,yBAAK7B,UAAU,UACX,yBAAKA,UAAU,YACX,yBAAKA,UAAU,YACX,2BAAOA,UAAU,uBACb,+BACI,4BACI,2CACA,wCACA,2CAGR,+BACKW,KAAKO,MAAMwC,WAAW3B,KAAI,SAAC2B,EAAYY,GACpC,OACI,wBAAIrC,IAAK,aAAeqC,GACpB,4BAAKA,GACL,kBAAC,EAAD,CAAUrC,IAAK,aAAeqC,EAAGnB,SAAUO,IAC3C,4BACK,EAAKxC,MAAMyC,UAAUW,WASlD,yBAAKtE,UAAU,aACf,yBAAKA,UAAU,cACX,2BAAO4F,KAAK,SAAS3B,MAAM,WAAWjE,UAAU,iBAAiB8F,QAASnF,KAAKoE,mB,GAzMlGxE,aCyBNyF,E,uKAnBP,OAEI,kBAAC,IAAD,KACI,kBAAC,EAAD,MACA,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAO/F,OAAK,EAACkC,KAAK,IAAI8D,UAAW7C,IACjC,kBAAC,IAAD,CAAOnD,OAAK,EAACkC,KAAK,UAAU8D,UAAW7C,IACvC,kBAAC,IAAD,CAAOnD,OAAK,EAACkC,KAAK,cAAc8D,UAAW1D,IAC3C,kBAAC,IAAD,CAAOtC,OAAK,EAACkC,KAAK,4BAA4B8D,UAAWxD,IACzD,kBAAC,IAAD,CAAOwD,UAAWxF,KAGtB,yBAAKT,UAAU,aACf,kBAAC,EAAD,W,GAhBKO,aCIN2F,MATf,WACE,OACE,yBAAKlG,UAAU,OACX,kBAAC,EAAD,QCIYmG,QACW,cAA7BnB,OAAOC,SAASmB,UAEe,UAA7BpB,OAAOC,SAASmB,UAEhBpB,OAAOC,SAASmB,SAASzD,MACvB,2DCZN0D,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBpF,MAAK,SAAAqF,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLnE,QAAQmE,MAAMA,EAAMjB,c","file":"static/js/main.e8976d26.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.034d6244.png\";","import React, { Component } from 'react';\r\nimport logo from '../assets/images/logo.png';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nclass Header extends Component {\r\n    render() {\r\n        return (\r\n            <header id=\"header\">\r\n                <div className=\"center\">\r\n\r\n                    <div id=\"logo\">\r\n                        <NavLink exact to = \"/torneo\">\r\n                            <img src={logo} className=\"app-logo\" alt=\"Logotipo\" />\r\n                        </NavLink> \r\n                    </div>\r\n\r\n                    <nav id=\"menu\">\r\n                        <ul>\r\n\r\n                        <li>\r\n                            <NavLink exact to = \"/torneo\" activeClassName=\"active\">Torneo</NavLink>\r\n                        </li>\r\n                        <li>\r\n                            <NavLink exact to = \"/Personajes\" activeClassName=\"active\">Personajes</NavLink>\r\n                        </li>\r\n                        </ul>\r\n                    </nav>\r\n\r\n                    <div className=\"clearfix\"></div>\r\n                </div>\r\n            </header>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\n\r\nconst Footer = () => {\r\n    return (\r\n        <footer id=\"footer\">\r\n        <div className=\"center\">\r\n            <p>&copy; MARVEL VS.</p>\r\n        </div>\r\n    </footer>\r\n\r\n    );\r\n}\r\n\r\nexport default Footer;","import React from 'react';\r\n\r\nconst Error = () => {\r\n    return (\r\n        <section id=\"content\">\r\n        <h2 className=\"subheader\">Página no encontrada</h2>\r\n        <p>La página que usted desea acceder no existe</p>\r\n        </section>\r\n\r\n    );\r\n}\r\n\r\nexport default Error;","import React, { Component } from 'react';\r\n\r\nclass Slider extends Component {\r\n\r\n    render() {\r\n        return (\r\n            <div id=\"slider\" className=\"slider\">\r\n                <h1>{this.props.title}</h1>\r\n            </div>\r\n\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport default Slider;","var Global = {\r\n    url1: 'https://gateway.marvel.com:443/v1/public/',\r\n    url2: '?ts=1&apikey=7d91b1aa061859e82ddb356ea9a648b1&hash=bed27319231ccf9c402e96b7e4062419'\r\n};\r\n\r\nexport default Global;\r\n","\r\nimport React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport Global from '../Global';\r\nimport axios from 'axios';\r\n\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\n\r\nclass Personajes extends Component {\r\n    url1 = Global.url1;\r\n    url2 = Global.url2;\r\n\r\n    state = {\r\n        personajes: [],\r\n        status: null\r\n    }\r\n\r\n    componentWillMount() {\r\n        this.getPersonajes();\r\n    }\r\n    getPersonajes = () => {\r\n        axios.get(this.url1 + \"characters\" + this.url2)\r\n            .then(res => {\r\n                this.setState({\r\n\r\n                    personajes: res.data.data.results,\r\n                    status: 'success'\r\n                });\r\n            });\r\n    }\r\n\r\n    render() {\r\n\r\n        if (this.state.personajes.length >= 1) {\r\n            var listpersonajes = this.state.personajes.map((personaje) => {\r\n                return (\r\n                    <div className=\"card\" id=\"personaje-template\" key={personaje.id}>\r\n\r\n                        <div className=\"card-img-top\">\r\n                            <Link to={'/personajes/personaje/' + personaje.id} >\r\n                                <img src={personaje.thumbnail.path + \".\" + personaje.thumbnail.extension} alt={personaje.name} />\r\n                            </Link>\r\n                        </div>\r\n                        <h2 className=\"card-title\">{personaje.name}</h2>\r\n                        <div className=\"card-center\">\r\n                            {/*<Link to={'/personajes/personaje/' + personaje.id} ><input type=\"submit\" value=\"Ver más\" className=\"btn btn-danger\" /></Link>*/}\r\n                            {personaje.description}\r\n                        </div>\r\n                        <div className=\"clearfix\"></div>\r\n                    </div>\r\n\r\n                );\r\n            });\r\n            return (\r\n                <div id=\"personajes\">\r\n                    {listpersonajes}\r\n                </div>\r\n            );\r\n        } else if (this.state.personajes.length === 0 && this.state.status === \"success\") {\r\n            return (\r\n                <div id=\"personajes\">\r\n                    <h2 className=\"subheader\">No hay personajes para mostrar</h2>\r\n                </div>\r\n            );\r\n        } else {\r\n            return (\r\n                <div className=\"center \" id=\"personajes\">\r\n                    <h2 className=\"subheader\">Cargando...</h2>\r\n                </div>\r\n            );\r\n        }\r\n\r\n    }\r\n}\r\n\r\nexport default Personajes;","import React, { Component } from 'react';\r\nimport Slider from './Slider';\r\nimport Personajes from './Personajes';\r\n\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\n\r\nclass PagPersonajes extends Component {\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div id=\"pagPersonajes\">\r\n                <Slider\r\n                    title=\"Personajes\"\r\n                    size=\"slider\"\r\n                />\r\n                <div className=\"center\">\r\n                    <div id=\"container\">\r\n                        <div className=\"row\" id=\"marvel\">\r\n                            <Personajes />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nexport default PagPersonajes;","import axios from 'axios';\r\nimport React, { Component } from 'react';\r\nimport Global from '../Global';\r\nimport Slider from './Slider';\r\n\r\nclass Personaje extends Component {\r\n    url1 = Global.url1;\r\n    url2 = Global.url2;\r\n\r\n    state = {\r\n        personaje: {},\r\n        status: null\r\n    };\r\n\r\n    componentWillMount() {\r\n        this.getPersonaje();\r\n    }\r\n\r\n    getPersonaje = () => {\r\n        var id = this.props.match.params.id;\r\n        axios.get(this.url1 + \"characters/\" + id + this.url2)\r\n            .then(res => {\r\n                this.setState({\r\n\r\n                    personaje: res.data.data.results[0],\r\n                    status: 'success'\r\n                });\r\n            });\r\n    }\r\n    render() {\r\n\r\n        var personaje = this.state.personaje;\r\n        console.log(personaje);\r\n        return (\r\n            Object.keys(personaje).length === 0 ?\r\n                <div id=\"article\">\r\n                    <h2 className=\"subheader\">Cargando...</h2>\r\n                </div>\r\n                : <React.Fragment>\r\n                    <Slider\r\n                        title={personaje.name}\r\n                        size=\"slider\"\r\n                    />\r\n                    <div className=\"center\">\r\n                        <section id=\"content\">\r\n\r\n                            {this.state.personaje &&\r\n                                <article className=\"article-item article-detail\" id=\"article-template\">\r\n                                    <div className=\"image-wrap\">\r\n                                        <img src={personaje.thumbnail.path + \".\" + personaje.thumbnail.extension} alt={personaje.name} />\r\n                                    </div>\r\n                                    <h1 className=\"subheader\">{personaje.name}</h1>\r\n                                    <p>\r\n                                        {personaje.description}\r\n                                    </p>\r\n                                    <div className=\"clearfix\"></div>\r\n                                </article>\r\n                            }\r\n\r\n                        </section>\r\n                        <div className=\"clearfix\"></div>\r\n                    </div>\r\n                </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Personaje;","import React, { Component } from 'react';\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\n\r\nclass Peleador extends Component {\r\n\r\n    render() {\r\n        const { name, thumbnail } = this.props.peleador;\r\n        return (\r\n            <React.Fragment>\r\n                <td>{name}</td>\r\n                <td>\r\n                    <img className=\"image-peleador\" src={thumbnail.path + \".\" + thumbnail.extension} alt={name} />\r\n                </td>\r\n            </React.Fragment>\r\n        );\r\n\r\n    }\r\n}\r\n\r\nexport default Peleador;","import React, { Component } from 'react';\r\nimport Slider from './Slider';\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport Peleador from './Peleador';\r\nimport Global from '../Global';\r\nimport axios from 'axios';\r\nimport SimpleReactValidator from 'simple-react-validator';\r\nclass Torneo extends Component {\r\n    url1 = Global.url1;\r\n    url2 = Global.url2;\r\n\r\n    cantidadRef = React.createRef();\r\n\r\n    state = {\r\n        personajes: [],\r\n        peleador_a: [],\r\n        peleador_b: [],\r\n        peleadores: [],\r\n        victorias: [],\r\n        status: null\r\n\r\n    }\r\n\r\n    componentWillMount() {\r\n        this.validator = new SimpleReactValidator({\r\n            messages: {\r\n                required: '*Este campo es requerido',\r\n                numeric: '*Ingrese un caracter numerico positivo menor a 10',\r\n                min: '*Ingrese un caracter numero positivo menor a 10',\r\n                max: '*Ingrese un caracter numero positivo menor a 10'\r\n\r\n            }\r\n        });\r\n        this.getPersonajes();\r\n    }\r\n\r\n    getPersonajes = () => {\r\n        axios.get(this.url1 + \"characters\" + this.url2)\r\n            .then(res => {\r\n                this.setState({\r\n                    personajes: res.data.data.results,\r\n                    status: 'success'\r\n                });\r\n            });\r\n    }\r\n\r\n    numeroPeleas = (e) => {\r\n        e.preventDefault();\r\n        var cantidadPeleas = this.cantidadRef.current.value;\r\n        var personajes = this.state.personajes;\r\n        var peleador_a = [];\r\n        var peleador_b = [];\r\n        var a = 0;\r\n        var b = 0;\r\n        if (this.validator.allValid()) {\r\n            for (let i = 0; i < cantidadPeleas; i++) {\r\n                a = Math.floor(Math.random() * personajes.length);\r\n                b = Math.floor(Math.random() * personajes.length);\r\n                peleador_a[i] = personajes[a];\r\n                peleador_b[i] = personajes[b];\r\n                personajes.splice(a, 1);\r\n                personajes.splice(b, 1);\r\n\r\n            }\r\n        } else {\r\n            this.setState({\r\n                status: 'failed'\r\n            });\r\n            this.validator.showMessages();\r\n            this.forceUpdate();\r\n\r\n        }\r\n\r\n\r\n        this.setState({\r\n            cantidadPeleas: cantidadPeleas,\r\n            peleador_a: peleador_a,\r\n            peleador_b: peleador_b\r\n        });\r\n\r\n    }\r\n    ranking = () => {\r\n        var peleador_a = this.state.peleador_a;\r\n        var peleador_b = this.state.peleador_b;\r\n        var victorias = [];\r\n        var peleadores = peleador_a.concat(peleador_b);\r\n\r\n        //Cantidad de victorias\r\n        for (let i = 0; i < peleadores.length; i++) {\r\n            victorias[i] = peleadores.length / 2 - i;\r\n            if (victorias[i] < 0) {\r\n                victorias[i] = 0;\r\n            }\r\n        };\r\n        this.setState({\r\n            peleadores: peleadores,\r\n            victorias: victorias\r\n        });\r\n    }\r\n\r\n\r\n    reload = () => {\r\n        window.location.replace('');\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                <Slider\r\n                    title=\"Torneo\"\r\n                />\r\n                <div className=\"center\">\r\n                    <div id=\"mid-form\" className=\"article-item\">\r\n\r\n                        <form className=\"mid-form\" onSubmit={this.numeroPeleas} onChange={this.numeroPeleas}>\r\n                            <p></p>\r\n                            <label htmlFor=\"peleas\">Ingrese la cantidad de peleas para la velada:</label>\r\n                            <input type=\"text\" name=\"peleas\" ref={this.cantidadRef} />\r\n                            <input type=\"submit\" value=\"Crear\" className=\"btn btn-danger\" onClick={this.numeroPeleas} />\r\n                            {this.validator.message('peleas', this.state.cantidadPeleas, 'required|numeric|min:1,num|max:10,num')}\r\n                        </form>\r\n                        {/*Tabla inicial*/}\r\n                        {this.state.peleador_a.length > 0 &&\r\n                            <div className=\"center\">\r\n                                <div className=\"mid-form\">\r\n                                    <div className=\"tableBox\">\r\n                                        <table className=\"table table-striped\">\r\n                                            <thead>\r\n                                                <tr>\r\n                                                    <th>Peleador</th>\r\n                                                    <th></th>\r\n                                                </tr>\r\n                                            </thead>\r\n                                            <tbody>\r\n                                                {\r\n                                                    this.state.peleador_a.map((peleador_a, i) => {\r\n                                                        return (\r\n                                                            <tr key={\"peleadorA\" + i}>\r\n                                                                <Peleador key={\"peleadorA\" + i} peleador={peleador_a} />\r\n                                                            </tr>\r\n                                                        )\r\n                                                    })\r\n                                                }\r\n                                            </tbody>\r\n                                        </table>\r\n                                    </div>\r\n                                    <div className=\"tableBox\">\r\n                                        <table className=\"table table-striped\">\r\n                                            <thead>\r\n                                                <tr>\r\n                                                    <th>Peleador</th>\r\n                                                    <th></th>\r\n                                                </tr>\r\n                                            </thead>\r\n                                            <tbody>\r\n                                                {this.state.peleador_b.map((peleador_b, i) => {\r\n                                                    return (\r\n                                                        <tr key={\"peleadorB\" + i}>\r\n                                                            <Peleador key={\"peleadorB\" + i} peleador={peleador_b} />\r\n                                                        </tr>\r\n                                                    )\r\n                                                })\r\n                                                }\r\n\r\n                                            </tbody>\r\n                                        </table>\r\n                                    </div>\r\n                                    <div className=\"clearfix\"></div>\r\n\r\n                                </div>\r\n                                <div className=\"btn-center\">\r\n                                    <button type=\"submit\" value=\"Comenzar\" className=\"btn btn-danger\" onClick={this.ranking}>Comenzar</button>\r\n                                </div>\r\n                            </div>\r\n\r\n                        }\r\n                        {this.state.peleadores.length > 0 &&\r\n                            <div className=\"center\">\r\n                                <div className=\"mid-form\">\r\n                                    <div className=\"tableBox\">\r\n                                        <table className=\"table table-striped\">\r\n                                            <thead>\r\n                                                <tr>\r\n                                                    <th>Posición</th>\r\n                                                    <th>Peleador</th>\r\n                                                    <th>Victorias</th>\r\n                                                </tr>\r\n                                            </thead>\r\n                                            <tbody>\r\n                                                {this.state.peleadores.map((peleadores, i) => {\r\n                                                    return (\r\n                                                        <tr key={\"peleadores\" + i}>\r\n                                                            <td>{i}</td>\r\n                                                            <Peleador key={\"peleadores\" + i} peleador={peleadores} />\r\n                                                            <td>\r\n                                                                {this.state.victorias[i]}\r\n                                                            </td>\r\n                                                        </tr>\r\n                                                    )\r\n                                                })\r\n                                                }\r\n                                            </tbody>\r\n                                        </table>\r\n                                    </div>\r\n                                    <div className=\"clearfix\"></div>\r\n                                    <div className=\"btn-center\">\r\n                                        <input type=\"submit\" value=\"Comenzar\" className=\"btn btn-danger\" onClick={this.reload}/>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        }\r\n                    </div>\r\n                </div>\r\n            </React.Fragment >\r\n        );\r\n    }\r\n}\r\n\r\nexport default Torneo;","import React, { Component } from 'react';\r\nimport { BrowserRouter, Route, Switch} from 'react-router-dom';\r\n\r\nimport Header from './components/Header';\r\nimport Footer from './components/Footer';\r\nimport Error from './components/Error.js';\r\nimport PagPersonajes from './components/PagPersonajes';\r\nimport Personaje from './components/Personaje';\r\nimport Torneo from './components/Torneo';\r\n\r\nclass Router extends Component {\r\n    render() {\r\n        \r\n        return (\r\n\r\n            <BrowserRouter>\r\n                <Header />\r\n                <Switch>\r\n                    <Route exact path=\"/\" component={Torneo} />\r\n                    <Route exact path=\"/torneo\" component={Torneo} />\r\n                    <Route exact path=\"/personajes\" component={PagPersonajes} />\r\n                    <Route exact path=\"/personajes/personaje/:id\" component={Personaje}/>\r\n                    <Route component={Error} />\r\n\r\n                </Switch>\r\n                <div className=\"clearfix\"></div>\r\n                <Footer />\r\n            </BrowserRouter >\r\n        );\r\n    }\r\n}\r\n\r\nexport default Router\r\n    ;","import React from 'react';\nimport './assets/css/App.css';\n\nimport Router from './Router';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n        <Router/>\n    </div>\n    \n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './assets/css/index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}